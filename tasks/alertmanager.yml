- name: Check if Alertmanager exists in /usr/local/bin
  ansible.builtin.stat: "path=/usr/local/bin/alertmanager"
  register: check_path

- name: Download Alertmanager
  ansible.builtin.get_url:
    url: https://github.com/prometheus/alertmanager/releases/download/v{{ alertmanager_version }}/alertmanager-{{ alertmanager_version }}.linux-amd64.tar.gz
    checksum: "sha256:{{ alertmanager_checksum }}"
    dest: /tmp
  when: not check_path.stat.exists

- name: Unarchive Alertmanager
  ansible.builtin.unarchive:
    src: /tmp/alertmanager-{{ alertmanager_version }}.linux-amd64.tar.gz
    dest: /tmp
    remote_src: yes
  when: not check_path.stat.exists

- name: Move Alertmanager to /usr/local/bin
  ansible.builtin.copy:
    src: /tmp/alertmanager-{{ alertmanager_version }}.linux-amd64/alertmanager
    dest: /usr/local/bin/alertmanager
    remote_src: yes
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx # 0755
  become: true
  when: not check_path.stat.exists

- name: Create config directory
  ansible.builtin.file:
    state: directory
    path: /etc/alertmanager
    mode: u=rwx,g=rx,o=rx # 0755
  become: true

- name: Add alertmanager config
  ansible.builtin.template:
    src: ./templates/alertmanager/alertmanager.yml.j2
    dest: /etc/alertmanager/alertmanager.yml
  become: true

- name: Add alertmanager rules
  ansible.builtin.copy:
    src: ./files/alertmanager/alert.rules.yml
    dest: /etc/prometheus/alert.rules
    owner: root
    group: root
    mode: u=rw # 0600
  become: true

- name: Install unit file to systemd
  ansible.builtin.template:
    src: ./templates/alertmanager/alertmanager.service.j2
    dest: /etc/systemd/system/alertmanager.service
    owner: root
    group: root
    mode: u=rw # 0600
  become: true

- name: Configure systemd to use service
  ansible.builtin.systemd:
    daemon_reload: yes
    enabled: yes
    state: started
    name: alertmanager.service
  notify: Restart Prometheus
  become: true
